# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
	# Shell is non-interactive.  Be done now!
	return
fi


export EMAIL=rowan@bigsmoke.us
export NFSSH=ssh.phx.nearlyfreespeech.net
export M15=molensteen.halfgaar.net

if [ "$HOSTNAME" == "duivenkracht" ]; then
    export VICTRON_WWW_ROOT=~/projects/victronenergy-cms/
    export VICTRON_WWW_URL=http://www.bigsmoke.victronenergy.com/
fi

if [ "$TERM" != "screen-256color" ]; then
    export TERM=xterm-256color
fi
if [[ "$TERM" = xterm* ]]; then
    export COLORTERM="24bit"
fi

export LESSCOLOR=always

export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

lsess() {
    ls --color=always $* | less -R
}
export -f lsess

#if [ -f "/etc/bash.bash_prompt" ]; then
#    . "/etc/bash.bash_prompt"
#fi

if [ -n "$TMUX" ]; then
    # update_environment() makes it so that tmux's update-environment option actually does something
    # in the currently opened shells instead of just when you spawn a new shell.
    tmux-update-environment() {
        eval "$(tmux show-environment | grep -E '^(SSH_AUTH_SOCK|SSH_CONNECTION|DISPLAY|BS_UPDATE_ENV_TEST)' | sed -E 's/^(.+)=(.+)$/export \1=\"\2\"/')"
    }
    trap 'tmux-update-environment' DEBUG
fi
